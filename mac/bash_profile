alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias du='du -hd1'
alias g='git'
alias grep="grep --color=auto"
alias grepi="grep -i"
alias gs="g s"
alias l='ls -lF'
alias la='ls -laF'
alias ls='ls -G'
alias psa="ps aux | grep "

alias d="cd ~/Downloads; l"
alias p="cd ~/projects; l"

export EDITOR="emacs -nw --no-init-file"
export VISUAL="emacs -nw --no-init-file"
export MAVEN_OPTS="-Xmx1g -XX:MaxPermSize=512m -XX:+UseCompressedOops -XX:+UseFastAccessorMethods -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled"

# BEGIN PROMPT
        RED="\[\033[0;31m\]"
      GREEN="\[\033[0;32m\]"
       BLUE="\[\033[0;34m\]"
 COLOR_NONE="\[\e[0m\]"
function parse_git_branch {
  git_status="$(git status 2> /dev/null)"
  branch_pattern="^# On branch ([^${IFS}]*)"
  if [[ ! ${git_status}} =~ "working directory clean" ]]; then
    state="*"
  fi
  if [[ ${git_status} =~ ${branch_pattern} ]]; then
    branch=${BASH_REMATCH[1]}
    echo " ${GREEN}${branch}${COLOR_NONE}${state}"
  fi
}
function prompt_func() {
    previous_return_value=$?;
    prompt="\u@\h ${BLUE}\w$(parse_git_branch)${COLOR_NONE}"
    if test $previous_return_value -eq 0
    then
        PS1="${prompt} $ "
    else
        PS1="${prompt} ${RED}!${COLOR_NONE} "
    fi
}
PROMPT_COMMAND=prompt_func
# END PROMPT


# ~/bin
export PATH=~/bin:$PATH

# Java
export JAVA_HOME=$(/usr/libexec/java_home)

# Scala
export SCALA_HOME=~/opt/scala
export PATH=$SCALA_HOME/bin:$PATH

# MongoDB
export MONGO_HOME=~/opt/mongo
export PATH=$MONGO_HOME/bin:$PATH
